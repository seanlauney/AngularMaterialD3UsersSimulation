{"ast":null,"code":"import _toConsumableArray from \"/Users/slauney/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/Users/slauney/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/slauney/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { BehaviorSubject, of } from 'rxjs';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { RandomUsersService } from './random-users.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/snack-bar\";\nimport * as i2 from \"./random-users.service\";\nexport var UserService = /*#__PURE__*/(function () {\n  var UserService = /*#__PURE__*/function () {\n    function UserService(snackBar, randomUsersService) {\n      _classCallCheck(this, UserService);\n\n      this.snackBar = snackBar;\n      this.randomUsersService = randomUsersService;\n      this.users$ = new BehaviorSubject([]);\n    }\n\n    _createClass(UserService, [{\n      key: \"loadMockData\",\n      value: function loadMockData(max) {\n        var _this = this;\n\n        this.randomUsersService.getUsers(max || 50).subscribe(function (item) {\n          _this.setUsers(item);\n        });\n      }\n    }, {\n      key: \"setUsers\",\n      value: function setUsers(users, friends) {\n        var usersCheck = localStorage.getItem('users');\n\n        if (usersCheck && !users) {\n          this.updateLocalStorage(JSON.parse(usersCheck));\n          return;\n        }\n\n        this.updateLocalStorage(users);\n      }\n    }, {\n      key: \"addUser\",\n      value: function addUser(user) {\n        var users = _toConsumableArray(JSON.parse(localStorage.getItem('users')));\n\n        users.push(user);\n        this.updateLocalStorage(users);\n        this.snackBar.open('User Added', '', {\n          duration: 2000\n        });\n        return of({\n          sucess: true\n        });\n      }\n    }, {\n      key: \"removeUser\",\n      value: function removeUser(index) {\n        var users = _toConsumableArray(JSON.parse(localStorage.getItem('users')));\n\n        users.splice(index, 1);\n        this.updateLocalStorage(users);\n        this.snackBar.open('User Removed', '', {\n          duration: 2000\n        });\n        return of({\n          sucess: true\n        });\n      }\n    }, {\n      key: \"clearCache\",\n      value: function clearCache() {\n        localStorage.clear();\n        this.updateLocalStorage([], []);\n      }\n    }, {\n      key: \"updateLocalStorage\",\n      value: function updateLocalStorage(users, friends) {\n        localStorage.setItem('users', JSON.stringify(users));\n        this.users$.next(JSON.parse(localStorage.getItem('users')));\n      }\n    }]);\n\n    return UserService;\n  }();\n\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.MatSnackBar), i0.ɵɵinject(i2.RandomUsersService));\n  };\n\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module"}