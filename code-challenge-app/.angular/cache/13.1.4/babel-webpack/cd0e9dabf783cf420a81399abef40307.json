{"ast":null,"code":"import _classCallCheck from \"/Users/slauney/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/slauney/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Link } from '../d3/models/link';\nimport { Node } from '../d3/models/node';\nimport { UserService } from '../services/users.service';\nimport { UserPhotoService } from '../services/user-photo.service';\nimport { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/users.service\";\nimport * as i2 from \"../services/user-photo.service\";\nimport * as i3 from \"../visuals/graph/graph.component\";\nexport var ChartComponent = /*#__PURE__*/(function () {\n  var ChartComponent = /*#__PURE__*/function () {\n    function ChartComponent(userService, userPhotoService) {\n      _classCallCheck(this, ChartComponent);\n\n      this.userService = userService;\n      this.userPhotoService = userPhotoService;\n      this.nodes = [];\n      this.links = [];\n      this.users = [];\n    }\n\n    _createClass(ChartComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        var _this = this;\n\n        this.userService.setUsers(); // this.userService.loadMockData();\n\n        this.userPhotoService.getPhotos().pipe(first()).subscribe(function (result) {\n          _this.users = result['results'];\n        });\n        this.userService.users$.subscribe(function (users) {\n          _this.constructNodes(users);\n        });\n      }\n    }, {\n      key: \"resetChart\",\n      value: function resetChart() {\n        this.nodes = [];\n        this.links = [];\n      }\n    }, {\n      key: \"setUpdateLinks\",\n      value: function setUpdateLinks(users) {\n        for (var i = 0; i < users.length; i++) {\n          var user = users[i];\n\n          if (user && Array.isArray(user.friends)) {\n            for (var j = 0; j < user.friends.length; j++) {\n              /** increasing connections toll on connecting nodes */\n              this.nodes[i].linkCount++;\n              /** connecting the nodes before starting the simulation */\n\n              this.links.push(new Link(i, j));\n            }\n          }\n        }\n      }\n    }, {\n      key: \"constructNodes\",\n      value: function constructNodes(users) {\n        this.resetChart();\n        /** constructing the nodes array */\n\n        for (var i = 0; i < users.length; i++) {\n          var node = new Node(i, users[i]);\n          this.nodes.push(node);\n        }\n\n        this.setUpdateLinks(users);\n      }\n    }]);\n\n    return ChartComponent;\n  }();\n\n  ChartComponent.ɵfac = function ChartComponent_Factory(t) {\n    return new (t || ChartComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.UserPhotoService));\n  };\n\n  ChartComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChartComponent,\n    selectors: [[\"app-chart\"]],\n    decls: 16,\n    vars: 3,\n    consts: [[3, \"nodes\", \"links\", \"photos\"]],\n    template: function ChartComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵelementStart(1, \"h4\");\n        i0.ɵɵtext(2, \"The simulation is interactive. You can \");\n        i0.ɵɵelementStart(3, \"span\");\n        i0.ɵɵtext(4, \"zoom, \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"span\");\n        i0.ɵɵtext(6, \" pan, \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"span\");\n        i0.ɵɵtext(8, \"drag\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"span\");\n        i0.ɵɵtext(10, \" and \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"span\");\n        i0.ɵɵtext(12, \"click\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(13, \" on the elements. Try it out! \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\");\n        i0.ɵɵelement(15, \"graph\", 0);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"nodes\", ctx.nodes)(\"links\", ctx.links)(\"photos\", ctx.users);\n      }\n    },\n    directives: [i3.GraphComponent],\n    styles: [\"h4[_ngcontent-%COMP%]{font-family:roboto;color:#f44336}div[_ngcontent-%COMP%]{flex-flow:row wrap;display:flex;padding-left:3em;background:white}div[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{max-width:50%}span[_ngcontent-%COMP%]{font-style:italic}\"]\n  });\n  return ChartComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}